package com.pico52.dominion.datasheet;

/** 
 * <b>BiomeData</b><br>
 * <br>
 * &nbsp;&nbsp;public class BiomeData implements {@link DataSheet}
 * <br>
 * <br>
 * The data sheet for all biome information.
 */
public class BiomeData implements DataSheet{
	public static double 
	heavyBonus, normalBonus, lightBonus, 
	harshPenalty, heavyPenalty, normalPenalty, lightPenalty, 
	plainsFarmBonus, plainsHerdingGroundsBonus, 
	plainsSpellPowerPenalty, plainsFishingPenalty, plainsDefensePenalty, 
	forestWoodshopBonus, forestHuntingBonus, forestInnBonus, 
	forestFoodConsumptionPenalty, forestAttritionDamage, 
	mountainMasonryBonus, mountainMiningBonus, mountainDefenseBonus, 
	mountainWheatPenalty, mountainTradePenalty, 
	snowAttritionDamage, snowFoodDecompositionBonus, 
	snowWheatPenalty, snowMelonPenalty, snowMushroomPenalty, 
	jungleFoodConsumptionBonus, jungleMelonBonus,
	jungleUnitFoodConsumptionPenalty, jungleUnitUpkeepPenalty, 
	swampManaCapacityBonus, swampManaRegenerationBonus, 
	swampWheatPenalty, swampHerdingGroundsPenalty, 
	mushroomSpellPowerBonus, mushroomMushroomBonus, 
	mushroomWheatPenalty, mushroomPumpkinPenalty, mushroomMelonPenalty, 
	oceanFishingBonus, oceanTradeBonus, 
	oceanManaRegenerationPenalty, oceanMiningPenalty, 
	desertTrainingGroundsBonus, desertSandworksBonus, 
	desertFarmPenalty, desertHerdingGroundsPenalty;
	
	/** 
	 * <b>BiomeData</b><br>
	 * <br>
	 * &nbsp;&nbsp;public BiomeData()
	 * <br>
	 * <br>
	 * The constructor clause for the {@link BiomeData} class.
	 */
	public BiomeData(){
		heavyBonus = 0.3;
		normalBonus = 0.2;
		lightBonus = 0.1;
		harshPenalty = 0.4;
		heavyPenalty = 0.3;
		normalPenalty = 0.2;
		lightPenalty = 0.1;
		plainsFarmBonus = heavyBonus;
		plainsHerdingGroundsBonus = normalBonus;
		plainsSpellPowerPenalty = normalPenalty;
		plainsFishingPenalty = lightPenalty;
		plainsDefensePenalty = normalPenalty;
		forestWoodshopBonus = normalBonus;
		forestHuntingBonus = normalBonus;
		forestInnBonus = normalBonus;
		forestFoodConsumptionPenalty = heavyPenalty;
		forestAttritionDamage = -.01;
		mountainMasonryBonus = normalBonus;
		mountainMiningBonus = normalBonus;
		mountainDefenseBonus = normalBonus; 
		mountainWheatPenalty = harshPenalty;
		mountainTradePenalty = harshPenalty;
		snowAttritionDamage = .01;
		snowFoodDecompositionBonus = 0; // - Multiplier, so food simply does not decompose.
		snowWheatPenalty = harshPenalty;
		snowMelonPenalty = normalPenalty;
		snowMushroomPenalty = harshPenalty;
		jungleFoodConsumptionBonus = normalBonus;
		jungleMelonBonus = heavyBonus;
		jungleUnitFoodConsumptionPenalty = normalPenalty;
		jungleUnitUpkeepPenalty = normalPenalty; 
		swampManaCapacityBonus = heavyBonus;
		swampManaRegenerationBonus = heavyBonus;
		swampWheatPenalty = harshPenalty;
		swampHerdingGroundsPenalty = heavyPenalty;
		mushroomSpellPowerBonus = heavyBonus;
		mushroomMushroomBonus = heavyBonus;
		mushroomWheatPenalty = harshPenalty;
		mushroomPumpkinPenalty = normalPenalty;
		mushroomMelonPenalty = normalPenalty;
		oceanFishingBonus = heavyBonus;
		oceanTradeBonus = heavyBonus;
		oceanManaRegenerationPenalty = normalPenalty;
		oceanMiningPenalty = harshPenalty;
		desertTrainingGroundsBonus = normalBonus;
		desertSandworksBonus = heavyBonus;
		desertFarmPenalty = normalPenalty;
		desertHerdingGroundsPenalty = normalPenalty;
	}

	@Override
	public String outputData() {
		String output = 
		"브Plains Farms:븑 +" + plainsFarmBonus + "  " + 
		"브Herding Grounds:븑 +" + plainsHerdingGroundsBonus + "\n" + 
		"브Plains Spell Power:븑 -" + plainsSpellPowerPenalty + "  " + 
		"브Fishing:븑 -" + plainsFishingPenalty + "  " +
		"브Defense:븑 -" + plainsDefensePenalty + "\n" +
		"브Forest Woodshop:븑 +" + forestWoodshopBonus + "  " +
		"브Hunting:븑 +" + forestHuntingBonus + "  " + 
		"브Inn:븑 +" + forestInnBonus + "\n" + 
		"브Forest Food Consumption:븑 -" + forestFoodConsumptionPenalty + "  " + 
		"브Attrition:븑 " + forestAttritionDamage + "\n" + 
		"브Mountain Masonry:븑 +" + mountainMasonryBonus + "  " + 
		"브Mining:븑 +" + mountainMiningBonus + "  " + 
		"브Defense::븑 +" + mountainDefenseBonus + "\n" + 
		"브Mountain Wheat:븑 -" + mountainWheatPenalty + "  " + 
		"브Trade:븑 -" + mountainTradePenalty + "\n" + 
		"브Snow Attrition:븑 +" + snowAttritionDamage + "  " + 
		"브Food Decomposition:븑 x" + snowFoodDecompositionBonus + "\n" + 
		"브Snow Wheat:븑 -" + snowWheatPenalty + "  " + 
		"브Melon:븑 -" + snowMelonPenalty + "  " + 
		"브Mushroom:븑 -" + snowMushroomPenalty + "\n" + 
		"브Jungle Food Consumption:븑 -" + jungleFoodConsumptionBonus + "  " + 
		"브Melon:븑 +" + jungleMelonBonus + "\n" + 
		"브Jungle Unit Food Consumption:븑 +" + jungleUnitFoodConsumptionPenalty + "  " + 
		"브Unit Upkeep:븑 +" + jungleUnitUpkeepPenalty + "\n" + 
		"브Swamp Mana Capacity:븑 +" + swampManaCapacityBonus + "  " + 
		"브Mana Regen:븑 +" + swampManaRegenerationBonus + "\n" + 
		"브Swamp Wheat:븑 -" + swampWheatPenalty + "  " + 
		"브Herding Grounds:븑 -" + swampHerdingGroundsPenalty + "\n" + 
		"브Mushroom Spell Power:븑 +" + mushroomSpellPowerBonus + "  " + 
		"브Mushroom:븑 +" + mushroomMushroomBonus + "\n" + 
		"브Mushroom Wheat:븑 -" + mushroomWheatPenalty + "  " + 
		"브Pumpkin:븑 -" + mushroomPumpkinPenalty + "  " + 
		"브Melon:븑 -" + mushroomMelonPenalty + "\n" + 
		"브Ocean Fishing:븑 +" + oceanFishingBonus + "  " + 
		"브Trade:븑 +" + oceanTradeBonus + "\n" + 
		"브Ocean Mana Regen:븑 -" + oceanManaRegenerationPenalty + "  " + 
		"브Mining:븑 -" + oceanMiningPenalty + "\n" + 
		"브Desert Training Grounds:븑 +" + desertTrainingGroundsBonus + "  " + 
		"브Sandworks:븑 +" + desertSandworksBonus + "\n" + 
		"브DesertFarm:븑 -" + desertFarmPenalty + "  " + 
		"브Herding Grounds:븑 -" + desertHerdingGroundsPenalty + "\n";
		return output;
	}
	
	/** 
	 * <b>isBiome</b><br>
	 * <br>
	 * &nbsp;&nbsp;public boolean isBiome({@link String} biome)
	 * <br>
	 * <br>
	 * @param biome - The name of the biome.
	 * @return True if the argument is a biome.  False if it is not.
	 */
	public boolean isBiome(String biome){
		if(biome.equalsIgnoreCase("plains") | biome.equalsIgnoreCase("forest") | biome.equalsIgnoreCase("mountain") | 
				biome.equalsIgnoreCase("snow") | biome.equalsIgnoreCase("jungle") | biome.equalsIgnoreCase("swamp") | 
				biome.equalsIgnoreCase("mushroom") | biome.equalsIgnoreCase("ocean") | biome.equalsIgnoreCase("desert"))
			return true;
		return false;
	}
}
